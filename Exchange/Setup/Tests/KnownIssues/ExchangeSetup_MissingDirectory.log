[03/06/2021 18:37:29.0350] [0] **********************************************
[03/06/2021 18:37:29.0350] [0] Starting Microsoft Exchange Server 2013 Setup
[03/06/2021 18:37:29.0350] [0] **********************************************
[03/06/2021 18:37:29.0350] [0] Local time zone: (UTC-05:00) Eastern Time (US & Canada).
[03/06/2021 18:37:29.0350] [0] Operating system version: Microsoft Windows NT 6.2.9200.0.
[03/06/2021 18:37:29.0350] [0] Setup version: 15.0.1497.2.
[03/06/2021 18:37:29.0350] [0] Logged on user: SOLO\Han.
[03/06/2021 18:37:29.0381] [0] Command Line Parameter Name='sourcedir', Value='C:\EXCH2013-CU23'.
[03/06/2021 18:37:29.0381] [0] Command Line Parameter Name='mode', Value='Install'.
[03/06/2021 18:37:29.0397] [0] RuntimeAssembly was started with the following command: '/sourcedir:C:\EXCH2013-CU23 /mode:Install'.
[03/06/2021 18:37:29.0522] [0] The following roles are installed: BridgeheadRole ClientAccessRole MailboxRole UnifiedMessagingRole FrontendTransportRole AdminToolsRole CafeRole
[03/06/2021 18:37:30.0240] [0] Setup is choosing the domain controller to use
[03/06/2021 18:37:30.0318] [0] The MSExchangeADTopology has a persisted domain controller: DC2.Solo.local
[03/06/2021 18:37:30.0834] [0] PrepareAD has been run, and has replicated to this domain controller; so setup will use DC2.Solo.local
[03/06/2021 18:37:30.0834] [0] Setup is choosing a global catalog...
[03/06/2021 18:37:30.0850] [0] Setup has chosen the global catalog server DC2.Solo.local.
[03/06/2021 18:37:30.0850] [0] Setup will use the domain controller 'DC2.Solo.local'.
[03/06/2021 18:37:30.0850] [0] Setup will use the global catalog 'DC2.Solo.local'.
[03/06/2021 18:37:30.0850] [0] Exchange configuration container for the organization is 'CN=Microsoft Exchange,CN=Services,CN=Configuration,DC=Solo,DC=local'.
[03/06/2021 18:37:30.0850] [0] Exchange organization container for the organization is 'CN=SoloORG,CN=Microsoft Exchange,CN=Services,CN=Configuration,DC=Solo,DC=local'.
[03/06/2021 18:37:30.0865] [0] Setup will search for an Exchange Server object for the local machine with name 'ExSvr1'.
[03/06/2021 18:37:30.0959] [0] Exchange Server object found : 'CN=ExSvr1,CN=Servers,CN=Exchange Administrative Group (FYDIBOHF23SPDLT),CN=Administrative Groups,CN=SoloORG,CN=Microsoft Exchange,CN=Services,CN=Configuration,DC=Solo,DC=local'.
[03/06/2021 18:37:30.0975] [0] The following roles have been unpacked: BridgeheadRole ClientAccessRole MailboxRole UnifiedMessagingRole FrontendTransportRole AdminToolsRole CafeRole
[03/06/2021 18:37:30.0975] [0] The following datacenter roles are unpacked:
[03/06/2021 18:37:30.0975] [0] The following roles are installed: BridgeheadRole ClientAccessRole MailboxRole UnifiedMessagingRole FrontendTransportRole AdminToolsRole CafeRole
[03/06/2021 18:37:30.0975] [0] The local server has some Exchange files installed.
[03/06/2021 18:37:30.0975] [0] Server Name=ExSvr1
[03/06/2021 18:37:30.0990] [0] Setup will use the path 'C:\EXCH2013-CU23' for installing Exchange.
[03/06/2021 18:37:30.0990] [0] Setup will discover the installed roles from server object 'CN=ExSvr1,CN=Servers,CN=Exchange Administrative Group (FYDIBOHF23SPDLT),CN=Administrative Groups,CN=SoloORG,CN=Microsoft Exchange,CN=Services,CN=Configuration,DC=Solo,DC=local'.
[03/06/2021 18:37:30.0990] [0] 'BridgeheadRole' is installed on the server object.
[03/06/2021 18:37:30.0990] [0] 'ClientAccessRole' is installed on the server object.
[03/06/2021 18:37:30.0990] [0] 'MailboxRole' is installed on the server object.
[03/06/2021 18:37:30.0990] [0] 'UnifiedMessagingRole' is installed on the server object.
[03/06/2021 18:37:30.0990] [0] 'CafeRole' is installed on the server object.
[03/06/2021 18:37:30.0990] [0] 'FrontendTransportRole' is installed on the server object.
[03/06/2021 18:37:30.0990] [0] The backup copy of the install path is 'C:\Program Files\Microsoft\Exchange Server\V15'.
[03/06/2021 18:37:30.0990] [0] The backup copy of the previously installed version is '15.0.1293.2'.
[03/06/2021 18:37:31.0006] [0] The installation mode is set to: 'BuildToBuildUpgrade'.
[03/06/2021 18:37:31.0647] [0] An Exchange organization with name 'SoloORG' was found in this forest.
[03/06/2021 18:37:31.0647] [0] Active Directory Initialization status : 'True'.
[03/06/2021 18:37:31.0647] [0] Schema Update Required Status : 'False'.
[03/06/2021 18:37:31.0647] [0] Organization Configuration Update Required Status : 'False'.
[03/06/2021 18:37:31.0647] [0] Domain Configuration Update Required Status : 'False'.
[03/06/2021 18:37:31.0647] [0] The locally installed version is 15.0.1497.2.
[03/06/2021 18:37:31.0647] [0] Exchange Installation Directory : 'C:\Program Files\Microsoft\Exchange Server\V15'.
[03/06/2021 18:37:31.0693] [0] Setup is determining what organization-level operations to perform.
[03/06/2021 18:37:31.0693] [0] Because the value was specified, setup is setting the argument OrganizationName to the value SoloORG.
[03/06/2021 18:37:31.0693] [0] The installed MSI is current for this version of Setup.
[03/06/2021 18:37:31.0693] [0] RootDataHandler has 1 DataHandlers
[03/06/2021 18:37:31.0709] [0] Validating options for the 7 requested roles
[03/06/2021 18:37:31.0709] [0] UpgradeModeDataHandler has 9 handlers and 9 work units
[03/06/2021 18:37:31.0787] [0] CurrentResult launcherbase.maincore:90: 0
[03/06/2021 18:37:32.0006] [0] Finished loading screen IncompleteInstallationDetectedPage.
[03/06/2021 18:37:39.0990] [0] Setup is determining what organization-level operations to perform.
[03/06/2021 18:37:39.0990] [0] Because the value was specified, setup is setting the argument OrganizationName to the value SoloORG.
[03/06/2021 18:37:39.0990] [0] The installed MSI is current for this version of Setup.
[03/06/2021 18:37:39.0990] [0] RootDataHandler has 1 DataHandlers
[03/06/2021 18:37:40.0006] [0] **************
[03/06/2021 17:30:16.0880] [1] Evaluated [Setting:ComputerNameDnsFullyQualified] [HasException:False] [Value:"ExSvr1.Solo.local"] [ParentValue:"<NULL>"] [Thread:41] [Duration:00:00:00]
[03/06/2021 18:39:47.0692] [1] Executing:
          $grammarPath = join-path $RoleInstallPath "UnifiedMessaging\grammars\*";

          $dirs = get-item $grammarPath;

          foreach($d in $dirs)
          {
	          if($d -isnot [System.IO.DirectoryInfo])
	          {
	            continue;
	          }

            $path1 = $d.FullName + "\*";

            $items = get-item $path1 -include *.cfg;

            if($items -ne $null)
            {
              foreach($i in $items)
              {
                remove-item $i;
              }
            }
          }

[03/06/2021 18:39:47.0692] [1] The following 1 error(s) occurred during task execution:
[03/06/2021 18:39:47.0692] [1] 0.  ErrorRecord: Cannot find path 'C:\Program Files\Microsoft\Exchange Server\V15\UnifiedMessaging\grammars' because it does not exist.
[03/06/2021 18:39:47.0724] [1] 0.  ErrorRecord: System.Management.Automation.ItemNotFoundException: Cannot find path 'C:\Program Files\Microsoft\Exchange Server\V15\UnifiedMessaging\grammars' because it does not exist.
   at System.Management.Automation.LocationGlobber.ExpandMshGlobPath(String path, Boolean allowNonexistingPaths, PSDriveInfo drive, ContainerCmdletProvider provider, CmdletProviderContext context)
   at System.Management.Automation.LocationGlobber.ResolveDriveQualifiedPath(String path, CmdletProviderContext context, Boolean allowNonexistingPaths, CmdletProvider& providerInstance)
   at System.Management.Automation.LocationGlobber.GetGlobbedMonadPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, CmdletProvider& providerInstance)
   at System.Management.Automation.LocationGlobber.GetGlobbedProviderPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, ProviderInfo& provider, CmdletProvider& providerInstance)
   at System.Management.Automation.LocationGlobber.GetChildNamesInDir(String dir, String leafElement, Boolean getAllContainers, CmdletProviderContext context, Boolean dirIsProviderPath, PSDriveInfo drive, ContainerCmdletProvider provider, String& modifiedDirPath)
   at System.Management.Automation.LocationGlobber.GenerateNewPSPathsWithGlobLeaf(StringCollection currentDirs, PSDriveInfo drive, String leafElement, Boolean isLastLeaf, ContainerCmdletProvider provider, CmdletProviderContext context)
   at System.Management.Automation.LocationGlobber.ExpandMshGlobPath(String path, Boolean allowNonexistingPaths, PSDriveInfo drive, ContainerCmdletProvider provider, CmdletProviderContext context)
   at System.Management.Automation.LocationGlobber.ResolveDriveQualifiedPath(String path, CmdletProviderContext context, Boolean allowNonexistingPaths, CmdletProvider& providerInstance)
   at System.Management.Automation.LocationGlobber.GetGlobbedMonadPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, CmdletProvider& providerInstance)
   at System.Management.Automation.LocationGlobber.GetGlobbedProviderPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, ProviderInfo& provider, CmdletProvider& providerInstance)
   at System.Management.Automation.SessionStateInternal.GetItem(String[] paths, CmdletProviderContext context)
   at Microsoft.PowerShell.Commands.GetItemCommand.ProcessRecord()
[03/06/2021 18:39:47.0724] [1] [ERROR] The following error was generated when "$error.Clear();
          $grammarPath = join-path $RoleInstallPath "UnifiedMessaging\grammars\*";

          $dirs = get-item $grammarPath;

          foreach($d in $dirs)
          {
	          if($d -isnot [System.IO.DirectoryInfo])
	          {
	            continue;
	          }

            $path1 = $d.FullName + "\*";

            $items = get-item $path1 -include *.cfg;

            if($items -ne $null)
            {
              foreach($i in $items)
              {
                remove-item $i;
              }
            }
          }
        " was run: "System.Management.Automation.ItemNotFoundException: Cannot find path 'C:\Program Files\Microsoft\Exchange Server\V15\UnifiedMessaging\grammars' because it does not exist.
   at System.Management.Automation.LocationGlobber.ExpandMshGlobPath(String path, Boolean allowNonexistingPaths, PSDriveInfo drive, ContainerCmdletProvider provider, CmdletProviderContext context)
   at System.Management.Automation.LocationGlobber.ResolveDriveQualifiedPath(String path, CmdletProviderContext context, Boolean allowNonexistingPaths, CmdletProvider& providerInstance)
   at System.Management.Automation.LocationGlobber.GetGlobbedMonadPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, CmdletProvider& providerInstance)
   at System.Management.Automation.LocationGlobber.GetGlobbedProviderPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, ProviderInfo& provider, CmdletProvider& providerInstance)
   at System.Management.Automation.LocationGlobber.GetChildNamesInDir(String dir, String leafElement, Boolean getAllContainers, CmdletProviderContext context, Boolean dirIsProviderPath, PSDriveInfo drive, ContainerCmdletProvider provider, String& modifiedDirPath)
   at System.Management.Automation.LocationGlobber.GenerateNewPSPathsWithGlobLeaf(StringCollection currentDirs, PSDriveInfo drive, String leafElement, Boolean isLastLeaf, ContainerCmdletProvider provider, CmdletProviderContext context)
   at System.Management.Automation.LocationGlobber.ExpandMshGlobPath(String path, Boolean allowNonexistingPaths, PSDriveInfo drive, ContainerCmdletProvider provider, CmdletProviderContext context)
   at System.Management.Automation.LocationGlobber.ResolveDriveQualifiedPath(String path, CmdletProviderContext context, Boolean allowNonexistingPaths, CmdletProvider& providerInstance)
   at System.Management.Automation.LocationGlobber.GetGlobbedMonadPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, CmdletProvider& providerInstance)
   at System.Management.Automation.LocationGlobber.GetGlobbedProviderPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, ProviderInfo& provider, CmdletProvider& providerInstance)
   at System.Management.Automation.SessionStateInternal.GetItem(String[] paths, CmdletProviderContext context)
   at Microsoft.PowerShell.Commands.GetItemCommand.ProcessRecord()".
[03/06/2021 18:39:47.0724] [1] [ERROR] Cannot find path 'C:\Program Files\Microsoft\Exchange Server\V15\UnifiedMessaging\grammars' because it does not exist.
[03/06/2021 18:39:47.0724] [1] [ERROR-REFERENCE] Id=UnifiedMessagingComponent___99d8be02cb8d413eafc6ff15e437e13d Component=EXCHANGE14:\Current\Release\Shared\Datacenter\Setup
[03/06/2021 18:39:47.0724] [1] Setup is stopping now because of one or more critical errors.
[03/06/2021 18:39:47.0724] [1] Finished executing component tasks.
[03/06/2021 18:39:47.0817] [1] Ending processing Install-UnifiedMessagingRole
