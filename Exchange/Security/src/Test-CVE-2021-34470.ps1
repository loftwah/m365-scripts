# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

<#
.SYNOPSIS
    Test for and addresses CVE-2021-34470.
.DESCRIPTION
    Environments running supported versions of Exchange Server should address
    CVE-2021-34470 by applying the CU and/or SU for the respective versions of
    Exchange, as described in
    https://techcommunity.microsoft.com/t5/exchange-team-blog/released-july-2021-exchange-server-security-updates/ba-p/2523421.

    Environments where the latest version of Exchange Server is any version before
    Exchange 2013, or environments where all Exchange servers have been removed, can
    use this script to address the vulnerability.
.EXAMPLE
    PS> .\Test-CVE-2021-34470.ps1
    Reports whether the vulnerability is present.
.EXAMPLE
    PS> .\Test-CVE-2021-34470.ps1 -ApplyFix
    Fixes the vulnerability if found. Note that this syntax requires Schema Admin.
#>
[CmdletBinding()]
param (
    [Parameter()]
    [switch]
    $ApplyFix
)

$ErrorActionPreference = "Stop"

$schemaMaster = [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().SchemaRoleOwner

$schemaDN = ([ADSI]"LDAP://$($schemaMaster)/RootDSE").schemaNamingContext

$storageGroupSchemaEntryDN = "LDAP://$($schemaMaster)/CN=ms-Exch-Storage-Group,$schemaDN"

if (-not ([System.DirectoryServices.DirectoryEntry]::Exists($storageGroupSchemaEntryDN))) {
    Write-Host "Exchange was not installed in this forest. Therefore, CVE-2021-34470 vulnerability is not present."
    return
}

$storageGroupSchemaEntry = [ADSI]($storageGroupSchemaEntryDN)
if ($storageGroupSchemaEntry.Properties["possSuperiors"].Count -eq 0) {
    Write-Host "CVE-2021-34470 vulnerability is not present."
    return
}

$hasUnexpectedValues = $false

foreach ($val in $storageGroupSchemaEntry.Properties["possSuperiors"]) {
    if ($val -eq "computer") {
        Write-Warning "CVE-2021-34470 vulnerability is present."
    } else {
        $hasUnexpectedValues = $true
        Write-Warning "CVE-2021-34470 vulnerability may be present due to an unexpected superior: $val"
    }
}

if ($ApplyFix) {
    if ($hasUnexpectedValues) {
        $OutputFile = "$PSScriptRoot\Test-CVE-2021-34470.log"
        "Attempting fix at $(Get-Date)." | Out-File $OutputFile -Append
        "Value prior to fix:" | Out-File $OutputFile -Append
        $storageGroupSchemaEntry.Properties["possSuperiors"] | Out-File $OutputFile -Append
    }

    try {
        Write-Host "Attempting to apply fix..."

        $rootDSE = [ADSI]("LDAP://$($schemaMaster)/RootDSE")
        [void]$rootDSE.Properties["schemaUpgradeInProgress"].Add(1)
        $rootDSE.CommitChanges()

        $storageGroupSchemaEntry.Properties["possSuperiors"].Clear()
        $storageGroupSchemaEntry.CommitChanges()

        Write-Host "Fix was applied successfully."
    } catch {
        Write-Warning "Failed to apply fix. Please ensure you have Schema Admin rights. Error was: `n$_"
    }
}
